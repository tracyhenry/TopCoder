#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <string>
#include <cstring>
#include <cmath>
#include <cstdlib>
#include <ctime>
#define LL long long
#define pi 3.1415926535897932384626433 
#define sqr(a) ((a)*(a))
using namespace std;
	
class ThePermutationGame {
public:
	int findMin(int N);
};

int mod = 1000000000 + 7;
int pr[101010], u[101010];
int nPr = 0;

int ThePermutationGame::findMin(int N) 
{
	//make pr
	memset(u, 0, sizeof(u));
	nPr = 0;
	for (int i = 2; i <= N; i ++)
		if (! u[i])
		{
			pr[++ nPr] = i;
			for (int j = i; j <= N; j += i)
				u[j] = 1;
		}
	//
	int ans = 1;
	for (int i = 1; i <= nPr; i ++)
	{
		int x = pr[i];
		int m = 0;
		for (int j = x; j <= N; j += x)
		{
			int cur = j, tot = 0;
			while (cur % x == 0)
				cur /= x, tot ++;
			m = max(m, tot);
		}
		for (int j = 1; j <= m; j ++)
			ans = (int) ((LL) ans * (LL) x % (LL) mod);
	}
	return ans;
}
			
		


// BEGIN KAWIGIEDIT TESTING
// Generated by KawigiEdit 2.1.8 (beta) modified by pivanof
#include <iostream>
#include <string>
#include <vector>
using namespace std;
bool KawigiEdit_RunTest(int testNum, int p0, bool hasAnswer, int p1) {
	cout << "Test " << testNum << ": [" << p0;
	cout << "]" << endl;
	ThePermutationGame *obj;
	int answer;
	obj = new ThePermutationGame();
	clock_t startTime = clock();
	answer = obj->findMin(p0);
	clock_t endTime = clock();
	delete obj;
	bool res;
	res = true;
	cout << "Time: " << double(endTime - startTime) / CLOCKS_PER_SEC << " seconds" << endl;
	if (hasAnswer) {
		cout << "Desired answer:" << endl;
		cout << "\t" << p1 << endl;
	}
	cout << "Your answer:" << endl;
	cout << "\t" << answer << endl;
	if (hasAnswer) {
		res = answer == p1;
	}
	if (!res) {
		cout << "DOESN'T MATCH!!!!" << endl;
	} else if (double(endTime - startTime) / CLOCKS_PER_SEC >= 2) {
		cout << "FAIL the timeout" << endl;
		res = false;
	} else if (hasAnswer) {
		cout << "Match :-)" << endl;
	} else {
		cout << "OK, but is it right?" << endl;
	}
	cout << "" << endl;
	return res;
}
int main() {
	bool all_right;
	all_right = true;
	
	int p0;
	int p1;
	
	{
	// ----- test 0 -----
	p0 = 11;
	p1 = 27720;
	all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
	// ------------------
	}
	
	if (all_right) {
		cout << "You're a stud (at least on the example cases)!" << endl;
	} else {
		cout << "Some of the test cases had errors." << endl;
	}
	return 0;
}
// END KAWIGIEDIT TESTING





//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!
